stages:
  - pre-build
  - pre-check
  - build
  - test
  - publish
  - notify


#
# PRE-BUILD
#

pre_build_next:
  stage: pre-build
  tags:
    - matt.sebbo.net
    - ssh
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
    - npm run bump:develop
    - cp package.json package.new.json
    - docker pull node:slim
    - docker build --no-cache
        --build-arg NODE_ENV="develop"
        --build-arg CLIENT_TAG="next"
        --build-arg NEXT="1"
        -t "docker.sebbo.net/dwimm/server:${CI_COMMIT_SHA}" .
    - docker push "docker.sebbo.net/dwimm/server:${CI_COMMIT_SHA}"
  artifacts:
    paths:
      - package.new.json
    expire_in: 2 weeks
  except:
    - master

pre_build:
  stage: pre-build
  tags:
    - matt.sebbo.net
    - ssh
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
    - npm run bump:production
    - cp package.json package.new.json
    - docker pull node:slim
    - docker build --no-cache
        --build-arg NODE_ENV="develop"
        -t "docker.sebbo.net/dwimm/server:${CI_COMMIT_SHA}" .
    - docker push "docker.sebbo.net/dwimm/server:${CI_COMMIT_SHA}"
  artifacts:
    paths:
      - package.new.json
    expire_in: 4 weeks
  only:
    - master


#
# PRE-CHECK
#

check_lint:
  stage: pre-check
  tags:
    - matt.sebbo.net
    - ssh
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
    - docker pull "docker.sebbo.net/dwimm/server:${CI_COMMIT_SHA}"
    - docker run --rm "docker.sebbo.net/dwimm/server:${CI_COMMIT_SHA}" npm run check


#
# BUILD
#

build_next:
  stage: build
  tags:
    - matt.sebbo.net
    - ssh
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
    - rm -f ./package.json
    - mv ./package.new.json ./package.json
    - docker pull node:slim
    - docker build --no-cache
      --build-arg NODE_ENV="production"
      --build-arg CLIENT_TAG="next"
      --build-arg NEXT="1"
      -t "dwimm/server:${CI_COMMIT_SHA}-next" .
    - docker push "dwimm/server:${CI_COMMIT_SHA}-next"
  only:
    - develop

build:
  stage: build
  tags:
    - matt.sebbo.net
    - ssh
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
    - rm -f ./package.json
    - mv ./package.new.json ./package.json
    - docker pull node:slim
    - docker build --no-cache
      --build-arg NODE_ENV="production"
      -t "dwimm/server:${CI_COMMIT_SHA}" .
    - docker push "dwimm/server:${CI_COMMIT_SHA}"
  only:
    - master

build_next_arm32v7:
  stage: build
  tags:
    - docker-host
    - arm
    - ssh
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - npm config set //registry.npmjs.org/:_authToken $NPM_TOKEN
    - rm -f ./package.json
    - mv ./package.new.json ./package.json
    - docker pull arm32v7/node:slim
    - docker build --no-cache
      --build-arg BASEIMAGE="arm32v7/node:slim"
      --build-arg NODE_ENV="production"
      --build-arg CLIENT_TAG="next"
      --build-arg NEXT="1"
      -f ./Dockerfile.arm-v7
      -t "dwimm/server:${CI_COMMIT_SHA}-next-arm32v7" .
    - docker push "dwimm/server:${CI_COMMIT_SHA}-next-arm32v7"
  only:
    - develop

build_arm32v7:
  stage: build
  tags:
    - docker-host
    - arm
    - ssh
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - npm config set //registry.npmjs.org/:_authToken $NPM_TOKEN
    - rm -f ./package.json
    - mv ./package.new.json ./package.json
    - docker pull arm32v7/node:slim
    - docker build --no-cache
      --build-arg BASEIMAGE="arm32v7/node:slim"
      --build-arg NODE_ENV="production"
      -f ./Dockerfile.arm-v7
      -t "dwimm/server:${CI_COMMIT_SHA}-arm32v7" .
    - docker push "dwimm/server:${CI_COMMIT_SHA}-arm32v7"
  only:
    - master


#
# PUBLISH
#

publish_github:
  stage: publish
  tags:
    - matt.sebbo.net
    - ssh
  retry: 2
  script:
    - git checkout $CI_COMMIT_REF_NAME
    - git pull
    - git push "https://${GITHUB_AUTH}@github.com/sebbo2002/dwimm-server.git" --all
    - git push "https://${GITHUB_AUTH}@github.com/sebbo2002/dwimm-server.git" --tags

publish_npm_next:
  stage: publish
  tags:
    - matt.sebbo.net
    - ssh
  script:
    - yarn install
    - npm config set //registry.npmjs.org/:_authToken $NPM_TOKEN
    - rm -f ./package.json
    - mv ./package.new.json ./package.json
    - npm publish --tag "next"
  only:
    - develop

publish_npm:
  stage: publish
  tags:
    - matt.sebbo.net
    - ssh
  script:
    - yarn install
    - npm config set //registry.npmjs.org/:_authToken $NPM_TOKEN
    - rm -f ./package.json
    - mv ./package.new.json ./package.json
    - npm publish
  only:
    - master

publish_docker_private:
  stage: publish
  tags:
    - matt.sebbo.net
    - ssh
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker manifest create "sebbo2002/dwimm-server-beta" "dwimm/server:${CI_COMMIT_SHA}-next" "dwimm/server:${CI_COMMIT_SHA}-next-arm32v7"
    - docker manifest annotate --arch "amd64" --os "linux" "sebbo2002/dwimm-server-beta" "dwimm/server:${CI_COMMIT_SHA}-next"
    - docker manifest annotate --arch "arm" --os "linux" "sebbo2002/dwimm-server-beta" "dwimm/server:${CI_COMMIT_SHA}-next-arm32v7"
    - docker manifest push -p "sebbo2002/dwimm-server-beta"
  only:
    - develop

publish_docker_next:
  stage: publish
  tags:
    - matt.sebbo.net
    - ssh
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker manifest create "dwimm/server:next" "dwimm/server:${CI_COMMIT_SHA}-next" "dwimm/server:${CI_COMMIT_SHA}-next-arm32v7"
    - docker manifest annotate --arch "amd64" --os "linux" "dwimm/server:next" "dwimm/server:${CI_COMMIT_SHA}-next"
    - docker manifest annotate --arch "arm" --os "linux" "dwimm/server:next" "dwimm/server:${CI_COMMIT_SHA}-next-arm32v7"
    - docker manifest push -p "dwimm/server:next"
  only:
    - develop

publish_docker:
  stage: publish
  tags:
    - matt.sebbo.net
    - ssh
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker manifest create "dwimm/server" "dwimm/server:${CI_COMMIT_SHA}" "dwimm/server:${CI_COMMIT_SHA}-arm32v7"
    - docker manifest annotate --arch "amd64" --os "linux" "dwimm/server" "dwimm/server:${CI_COMMIT_SHA}"
    - docker manifest annotate --arch "arm" --os "linux" "dwimm/server" "dwimm/server:${CI_COMMIT_SHA}-arm32v7"
    - docker manifest push -p "dwimm/server"
  only:
    - master

publish_docker_version:
  stage: publish
  tags:
    - matt.sebbo.net
    - ssh
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - export VERSION=$(cat ./package.new.json | jq -rM .version)
    - docker manifest create "dwimm/server:${VERSION}" "dwimm/server:${CI_COMMIT_SHA}" "dwimm/server:${CI_COMMIT_SHA}-arm32v7"
    - docker manifest annotate --arch "amd64" --os "linux" "dwimm/server:${VERSION}" "dwimm/server:${CI_COMMIT_SHA}"
    - docker manifest annotate --arch "arm" --os "linux" "dwimm/server:${VERSION}" "dwimm/server:${CI_COMMIT_SHA}-arm32v7"
    - docker manifest push -p "dwimm/server:${VERSION}"
  only:
    - master

private-deployment:
  stage: publish
  tags:
    - matt.sebbo.net
    - ssh
  environment:
    name: dwimm.sebbo.net
    url: https://dwimm.sebbo.net/
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
    - docker pull "dwimm/server:${CI_COMMIT_SHA}"
    - docker stop "dwimm" || true
    - docker rm "dwimm" || true
    - docker create --restart "always" --name="dwimm"
        --link mariadb:db
        -v "/etc/timezone:/etc/timezone:ro" -v "/etc/localtime:/etc/localtime:ro"
        -e "DATABASE=${DEPLOYMENT_DATABASE}"
        -p 127.0.0.1:10060:8080
        "dwimm/server:${CI_COMMIT_SHA}"
    - docker start dwimm
  only:
    - develop


#
# NOTIFY
#

notify:
  stage: notify
  tags:
    - matt.sebbo.net
    - ssh
  script:
    - curl -X "POST" "https://api.repository.dwimm.org/webhooks/update-components/${NOTIFY_WEBHOOK_SECRET}"
  only:
    - develop
    - master
